/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Error;
import io.swagger.model.InlineResponse400;
import io.swagger.model.ShiftRequest;
import io.swagger.model.StatusJob;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-06-06T16:32:15.795+02:00[Europe/Brussels]")
@Api(value = "solve", description = "the solve API")
public interface SolveApi {

    @ApiOperation(value = "Solve SHIFT problem", nickname = "solveShiftProblem", notes = "Endpoint for solving shift optimisation problem. ", response = StatusJob.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Shift API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "solve job accepted to queue", response = StatusJob.class),
        @ApiResponse(code = 400, message = "Wrong format", response = InlineResponse400.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 404, message = "The specified resource was not found", response = Error.class) })
    @RequestMapping(value = "/solve",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<StatusJob> solveShiftProblem(@ApiParam(value = "Payload for all information concerning the shift problem.
This includes:

 - the demand
 - the pool of employees
 - the statutes
" ,required=true )  @Valid @RequestBody ShiftRequest body,@ApiParam(value = "The number of seconds you give the solver to optimise the SHIFT problem. By default, the solver decides.") @Valid @RequestParam(value = "seconds", required = false) Integer seconds);

}
